version: '3.8'

services:
  rabbitmq:
    image: docker.io/library/rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  # PostgreSQL for Order Service
  order-db:
    image: docker.io/library/postgres:13
    container_name: order-db
    environment:
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: order_pass
      POSTGRES_DB: orders_db
    volumes:
      - order_data:/var/lib/postgresql/data

  # MongoDB for Inventory Service
  inventory-db:
    image: docker.io/library/mongo:4.4
    container_name: inventory-db
    ports:
      - "27017:27017"
    volumes:
      - inventory_data:/data/db

  # Redis for Notification Service
  notification-db:
    image: docker.io/library/redis:alpine
    container_name: notification-db
    ports:
      - "6379:6379"

  # Order Service
  order-service:
    build:
      context: ./order-service
    ports:
      - "8080:8080"
    depends_on:
      - rabbitmq
      - order-db
    environment:
      DATABASE_URL: postgres://order_user:order_pass@order-db:5432/orders_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

  # Inventory Service
  inventory-service:
    build:
      context: ./inventory-service
    ports:
      - "8081:8081"
    depends_on:
      - rabbitmq
      - inventory-db
    environment:
      DATABASE_URL: mongodb://inventory-db:27017/inventory_db
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

  # Notification Service
  notification-service:
    build:
      context: ./notification-service
    ports:
      - "8082:8082"
    depends_on:
      - rabbitmq
      - notification-db
    environment:
      DATABASE_URL: redis://notification-db:6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672

volumes:
  order_data:
  inventory_data:
